# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

# первый вариант - универсальнее, но более требователен к качеству входящих данных т.к. может пролезть лишнее
def person_1(**kwargs):
    """
    с применением kwargs
    принимает значения описывающие пользователя и выводит их встроку
    """
    for key, el in kwargs.items():
        print(f'{key}:{el} ', end='')
    print()


# Второй вариант - тупой но с жестко ограниченными пареметрами
def person_2(name, lastname, year, city, mail, phone):
    """
    топором
    принимает значения описывающие пользователя и выводит их встроку
    (name: str, lastname str ,year int, city str, mail  str, phone str)
    """
    print(f'имя:{name} фамилия:{lastname} год рождения:{year} город проживания:{city} email:{mail} телефон:{phone}')


person_dict = {
    'имя': "Тест",
    'фамилия': "Тестов",
    'год рождения': 1983,
    'город проживания': 'Запупыринск',
    'email': 'tt@durakov.net',
    'телефон': '123456789'
}

# Вызов первого варианта
print('Первый вариант:')
person_1(**person_dict)

# Вызов второго варианта
print('Второй вариант:')
person_2(year=1983, name="Тест", lastname="Тестов", city='Запупыринск', phone='123456789', mail='tt@durakov.net')
