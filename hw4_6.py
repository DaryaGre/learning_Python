# 6. Реализовать два небольших скрипта:
# а) бесконечный итератор, генерирующий целые числа, начиная с указанного,
# б) бесконечный итератор, повторяющий элементы некоторого списка, определенного заранее.
# Подсказка: использовать функцию count() и cycle() модуля itertools.

from itertools import count, cycle


# боюсь я бесконечных итераторов, по этому можно я сделаю c break, без выкрутасов?
def my_cout(x: int):
    """
    бесконечный итератор, генерирующий целые числа, начиная с указанного
    (int)->list
    """

    my_list = []

    for el in count(x):
        # чтобы бесконечный итератор остановился
        if el > x + 8:
            break
        else:
            my_list.append(el)

    return my_list


def my_cycle(my_list):
    """
    бесконечный итератор, повторяющий элементы некоторого списка, определенного заранее.
    (list)
    """

    # чтобы бесконечный итератор остановился
    с = 0
    for el in cycle(my_list):
        if с > 30:
            break
        print(el)
        с += 1


# плохо себе представляю что получится если в такой конструкции забыть сделать ограничение работы бесконечного итератора
my_cycle(my_cout(3))
